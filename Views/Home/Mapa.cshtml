@model BankZdjecOlsztyn.ViewsModels.HomeViewsModel
    <div id="map" class="map col-8"></div>


<script type="text/javascript">
    var wydzial = ol.proj.fromLonLat([20.45594, 53.74374]);
    var view = new ol.View({
        center: wydzial,
        zoom: 11
    });

    var vectorSource = new ol.source.Vector({});
    var places = [
    ];
    var ile = @Model.Miejsca.Count ;
    var tabS =[@foreach (var item in Model.Miejsca)
        {
            @((item.szerokosc * 1000000000000000).ToString() +',' )
    },
    ];

    var tabW = [@foreach (var item in Model.Miejsca)
        {
             @((item.wysokosc * 1000000000000000).ToString() +',' )
    },
    ];


    for (var i = 0; i < ile; i++) {

        places[i] = [];
        places[i][0] = tabW[i] / 1000000000000000;
        places[i][1] = tabS[i] / 1000000000000000;
        places[i][2] ='http://maps.google.com/mapfiles/ms/micons/blue.png';
    }
    console.log(tabW);
    console.log(places);
    var features = [];
    for (var i = 0; i < places.length; i++) {
        var iconFeature = new ol.Feature({
            geometry: new ol.geom.Point(ol.proj.transform([places[i][0], places[i][1]], 'EPSG:4326', 'EPSG:3857')),
        });


        var iconStyle = new ol.style.Style({
            image: new ol.style.Icon({
                src: places[i][2],
                color: places[i][3],
                crossOrigin: 'anonymous',
            })
        });
        iconFeature.setStyle(iconStyle);
        vectorSource.addFeature(iconFeature);
    }



    var vectorLayer = new ol.layer.Vector({
        source: vectorSource,
        updateWhileAnimating: true,
        updateWhileInteracting: true
    });

    var map = new ol.Map({
        target: 'map',
        view: view,
        layers: [
            new ol.layer.Tile({
                preload: 3,
                source: new ol.source.OSM(),
            }),
            vectorLayer,
        ],
        loadTilesWhileAnimating: true,
    });
</script>



